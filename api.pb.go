// Start Header

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: api.proto

package main

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Move int32

const (
	Move_Noop      Move = 0
	Move_Left      Move = 1
	Move_Right     Move = 2
	Move_Up        Move = 3
	Move_Down      Move = 4
	Move_PlaceMark Move = 5
	Move_Quit      Move = 6
)

// Enum value maps for Move.
var (
	Move_name = map[int32]string{
		0: "Noop",
		1: "Left",
		2: "Right",
		3: "Up",
		4: "Down",
		5: "PlaceMark",
		6: "Quit",
	}
	Move_value = map[string]int32{
		"Noop":      0,
		"Left":      1,
		"Right":     2,
		"Up":        3,
		"Down":      4,
		"PlaceMark": 5,
		"Quit":      6,
	}
)

func (x Move) Enum() *Move {
	p := new(Move)
	*p = x
	return p
}

func (x Move) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Move) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (Move) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x Move) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Move.Descriptor instead.
func (Move) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

// Start Message Definitions
type MoveMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MoveRequest Move `protobuf:"varint,1,opt,name=moveRequest,proto3,enum=main.Move" json:"moveRequest,omitempty"`
}

func (x *MoveMessage) Reset() {
	*x = MoveMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveMessage) ProtoMessage() {}

func (x *MoveMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveMessage.ProtoReflect.Descriptor instead.
func (*MoveMessage) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *MoveMessage) GetMoveRequest() Move {
	if x != nil {
		return x.MoveRequest
	}
	return Move_Noop
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69,
	0x6e, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3b, 0x0a, 0x0b, 0x4d, 0x6f,
	0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x0b, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2a, 0x50, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6f, 0x70, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x65, 0x66,
	0x74, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x69, 0x67, 0x68, 0x74, 0x10, 0x02, 0x12, 0x06,
	0x0a, 0x02, 0x55, 0x70, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x6f, 0x77, 0x6e, 0x10, 0x04,
	0x12, 0x0d, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x10, 0x05, 0x12,
	0x08, 0x0a, 0x04, 0x51, 0x75, 0x69, 0x74, 0x10, 0x06, 0x32, 0x3e, 0x0a, 0x0b, 0x4d, 0x6f, 0x76,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4d,
	0x6f, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0b, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_proto_goTypes = []interface{}{
	(Move)(0),           // 0: main.Move
	(*Empty)(nil),       // 1: main.Empty
	(*MoveMessage)(nil), // 2: main.MoveMessage
}
var file_api_proto_depIdxs = []int32{
	0, // 0: main.MoveMessage.moveRequest:type_name -> main.Move
	2, // 1: main.MoveService.PerformMove:input_type -> main.MoveMessage
	1, // 2: main.MoveService.PerformMove:output_type -> main.Empty
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MoveServiceClient is the client API for MoveService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MoveServiceClient interface {
	PerformMove(ctx context.Context, in *MoveMessage, opts ...grpc.CallOption) (*Empty, error)
}

type moveServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMoveServiceClient(cc grpc.ClientConnInterface) MoveServiceClient {
	return &moveServiceClient{cc}
}

func (c *moveServiceClient) PerformMove(ctx context.Context, in *MoveMessage, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/main.MoveService/PerformMove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MoveServiceServer is the server API for MoveService service.
type MoveServiceServer interface {
	PerformMove(context.Context, *MoveMessage) (*Empty, error)
}

// UnimplementedMoveServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMoveServiceServer struct {
}

func (*UnimplementedMoveServiceServer) PerformMove(context.Context, *MoveMessage) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PerformMove not implemented")
}

func RegisterMoveServiceServer(s *grpc.Server, srv MoveServiceServer) {
	s.RegisterService(&_MoveService_serviceDesc, srv)
}

func _MoveService_PerformMove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoveServiceServer).PerformMove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.MoveService/PerformMove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoveServiceServer).PerformMove(ctx, req.(*MoveMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _MoveService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.MoveService",
	HandlerType: (*MoveServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PerformMove",
			Handler:    _MoveService_PerformMove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
